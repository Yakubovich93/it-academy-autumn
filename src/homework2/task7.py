# """
# Бандиты Гарри и Ларри отдыхали на природе. Решив пострелять,
#  они выставили на бревно несколько банок
#  из-под кока-колы (не больше 10). Гарри начал простреливать
#   банки по порядку, начиная с самой левой,
#   Ларри — с самой правой. В какой-то момент получилось так,
#    что они одновременно прострелили одну
#    и ту же последнюю банку.
#
# Гарри возмутился и сказал, что Ларри должен ему кучу денег
#  за то, что тот лишил его удовольствия
#  прострелить несколько банок. В ответ Ларри сказал, что
#   Гарри должен ему еще больше денег по тем
#   же причинам. Они стали спорить кто кому сколько должен,
#    но никто из них не помнил сколько банок
#   было в начале, а искать простреленные банки по всей
#    округе было неохота. Каждый из них помнил
#    только, сколько банок прострелил он сам.
#
# Определите по этим данным, сколько банок не прострелил
#  Гарри и сколько банок не прострелил Ларри.
#
# Входные данные
# В единственной строке входного файла INPUT.TXT записано
#  2 числа — количество банок, простреленных
#  Гарри и Ларри соответственно.
#
# Выходные данные
# В файл OUTPUT.TXT выведите 2 числа — количество банок,
#  не простреленных Гарри и Ларри
#  соответственно.
# """
try:
    a, b = 4, 7
    sum = a + b - 1
    if sum <= 10:
        print(sum - a, sum - b)
except ValueError:
    print('Error')


# ----------------------------------------------------
# """
# Вы пользуетесь общественным транспортом? Вероятно, вы
#  расплачивались за проезд и
# получали билет с номером. Счастливым билетом называют
#  такой билет с шестизначным номером,
# где сумма первых трех цифр равна сумме последних трех.
#  Т.е. билет с номером 385916 – счастливый,
#  т.к. 3+8+5=9+1+6. Вам требуется написать программу,
#   которая проверяет счастливость билета.
#
# Входные данные
# В единственной строке входного файла INPUT.TXT записано
#  одно целое число N (0 ≤ N < 106).
#
# Выходные данные
# В выходной файл OUTPUT.TXT нужно вывести «YES», если
#  билет с номером N счастливый и «NO» в
# противном случае.
# """
number = 582681
d1 = number % 10
d2 = number // 10 % 10
d3 = number // 100 % 10
d4 = number // 1000 % 10
d5 = number // 10000 % 10
d6 = number // 100000
if d1 + d2 + d3 == d4 + d5 + d6:
    print('YES')
else:
    print('NO')


# ------------------------------------------------
# """
# Даны три целых числа, записанных в отдельных строках.
#  Определите, сколько среди них совпадающих.
# """
a = 1
b = 1
c = 2
if a == b and b == c:
    print(3)
elif a == b or a == c:
    print(2)
else:
    print(0)


#     -----------------------------------------------
# """
# Быки и коровы
# (Время: 1 сек. Память: 16 Мб Сложность: 26%)
# Петя и Вася часто играют в различные логические игры.
#  Недавно Петя поведал Васе о новой игре
# «Быки и коровы» и теперь они играют в эту игру
#  сутками. Суть игры очень проста: Петя загадывает
#  четырехзначное число, состоящее из различных цифр.
#   Вася отгадывает задуманное Петей число,
#   перебирая возможные варианты. Каждый раз Вася
#    предлагает вариант своего числа, а Петя делает
#    Васе подсказку: сообщает количество быков и
#     коров, после чего Вася с учетом подсказки
#     продолжает отгадывание числа до тех пор, пока
#      не отгадает. Быки – это количество цифр в
#     предложенном Васей числе, совпадающих по
#      значению и стоящих в правильной позиции в
#     задуманном Петей числе. Коровы – количество
#      цифр, совпадающих по значению, но находящихся
#      в неверной позиции. Например, если Петя
#       задумал число 5671, а Вася предложил
#       вариант 7251, то число быков равно 1
#        (только цифра 1 на своем месте), а число
#         коров
#        равно 2 (только цифры 7 и 5 не на своих
#         местах). Петя силен в математике, но даже
#          он
#         может ошибаться. Помогите Пете написать
#          программу, которая бы по загаданному Петей
#          и предложенному Васей числам сообщала
#           количество быков и коров.
#
# Входные данные
# В единственной строке входного файла INPUT.TXT
#  записано два четырехзначных натуральных
#  числа A и B через пробел, где А – загаданное
#   Петей число, а В – предложенный Васей вариант.
#
# Выходные данные
# В выходной файл OUTPUT.TXT нужно вывести два
#  целых числа через пробел — количество быков
#  и коров.
# """
num1, num2 = 1234, 2149
str_num1 = str(num1)
str_num2 = str(num2)
count_bull = 0
count_cow = 0
for i in str_num1:
    if i in str_num2:
        count_bull += 1
for i in range(len(str_num1)):
    if str_num1[i] == str_num2[i]:
        count_cow += 1
print(count_bull, count_cow)


# -----------------------------------------
# """"
# Катя и Таня играли в слова. Одна из девочек
#  называла слово на английском языке, вторая
#  должна найти анаграмму. Анаграмма – это
#   слово, полученное из другого слова путем
#   перестановки всех без исключения букв
#    первого слова.
#
# Написать программу, которая проверит,
#  правильно ли девочки создают анаграммы.
#
# Входные данные
# Входной файл INPUT.TXT содержит два слова
#  на английском языке в нижнем регистре,
#  разделенные пробелом. Каждое слово содержит
#   от 1 до 20 символов.
#
# Выходные данные
# В выходной файл OUTPUT.TXT выведите «YES»,
#  если анаграмма подобрана правильно,
#  иначе выведите «NO».
# """
str_1 = "stop"
str_2 = "tops"
count = 0
for i in range(len(str_1)):
    if str_1[i] != str_2[i]:
        count += 1
if count == 4:
    print('Yes')
else:
    print('no')


"""Дана строка, содержащая только английские буквы
(большие и маленькие) и открывающие скобки.
Сформировать новую строку добавлением справа
зеркальной строки с закрывающими скобками."""
str_ = '(a(b(c(d('


def mirrow(s):
    if len(str_) == 1:
        if str_ == '(':
            return '(' + ')'
        else:
            return str_ + str_
    else:
        if str_[0] == '(':
            return '(' + mirrow(str_[1:]) + ')'
        else:
            return str_[0] + mirrow(str_[1:]) + str_[0]


print(mirrow(str_))


"""«Морской бой» - игра для двух участников, в которой
игроки по очереди называют координаты на неизвестной им
 карте соперника. Если у соперника по этим координатам
  имеется корабль, то корабль или его часть «топится»,
   а попавший получает право сделать еще один ход. Цель
    игрока - первым поразить все корабли противника.

«Морской бой» очень популярен среди учеников одной
 физико-математической школы. Ребята очень любят в него
  играть на переменах. Вот и сейчас ученики Иннокентий и
   Емельян начали новую партию.

Правила, по которым ребята расставляют корабли перед
 началом партии, несколько отличаются от классических.
  Во-первых, игра происходит на поле размером N×M, а
   не 10×10. Во-вторых, число кораблей, их размер и форма
    выбираются ребятами перед партией - так играть
     намного интереснее.

Емельян уже расставил все свои корабли, кроме одного
 однопалубного. Такой корабль занимает ровно одну клетку.

Задана расстановка кораблей Емельяна. Найдите число
 способов поставить оставшийся однопалубный корабль.
  При этом учитывайте, что по правилам его можно ставить
   только в ту клетку, все соседние с которой не заняты.
В этой задаче соседними считаются клетки, имеющие общую сторону.

Входные данные
Первая строка входного файла INPUT.TXT содержит два числа:
 N и M (1 ≤ N, M ≤ 100). Последующие N строк описывают игровое
  поле - каждая из них содержит M символов. Символом «.» (точка)
   обозначена свободная клетка, символом «*» (звездочка)
    - занятая кораблем.

Выходные данные
В выходной файл OUTPUT.TXT выведите ответ на задачу."""
row, column = map(int, input().split())
lst = []
count = 0
lst.append('.' * (row + 2))

for i in range(row):
    elem = input()
    lst.append('.' + elem + '.')

lst.append('.' * (row + 2))

for i in range(1, row + 1):
    for j in range(1, column + 1):
        if (lst[i - 1][j] == '.' and lst[i]
            [j - 1] == '.' and lst[i + 1][j] == '.' and lst[i]
                [j + 1] == '.' and lst[i][j] == '.'):
            count += 1
print(count)
